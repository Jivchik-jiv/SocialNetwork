{"version":3,"sources":["components/content/dialogs/dialogsChat/DialogsChat.module.css","components/content/dialogs/Dialogs.module.css","components/content/dialogs/dialogsNav/dialogsItems/DialogsItem.module.css","components/content/dialogs/dialogsNav/DialogsNav.module.css","components/content/dialogs/dialogsChat/DialogsChat1.jsx","components/content/dialogs/dialogsChat/DialogsChat2.jsx","components/content/dialogs/dialogsChat/DialogsChat3.jsx","components/content/dialogs/dialogsChat/DialogsChat4.jsx","components/content/dialogs/dialogsChat/DialogsChat0.jsx","components/content/dialogs/dialogsNav/dialogsItems/DialogsItem.jsx","components/content/dialogs/dialogsNav/DialogsNav.jsx","components/content/dialogs/Dialogs.jsx","components/content/dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogsChat1","props","newMessage","React","createRef","currentUser","currentState","state","chatsUsers","messages","map","m","iAmSender","className","s","sended","text","Math","random","resived","src","image","alt","reverse","currentDialog","name","ref","placeholder","onChange","current","value","onMessageChange","newMessageText","onClick","event","preventDefault","sendNewMessage","clear","DialogsChat2","DialogsChat3","DialogsChat4","maxLength50","maxLengthCreator","NewMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","DialogsChat0","id","values","newMessageBody","DialogsItem","dialogItem","to","link","activeClassName","active","DialogsNav","chatsLinks","data","l","dialogNav","Dialogs","dialogs","dialogsChat","path","render","compose","connect","dialogsPage","dispatch","action","sendNewMessageActionCreator","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,cAAgB,mCAAmC,SAAW,8BAA8B,OAAS,4BAA4B,QAAU,6BAA6B,WAAa,gCAAgC,MAAQ,6B,oBCA/OD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,YAAc,+B,oBCAhGD,EAAOC,QAAU,CAAC,WAAa,gCAAgC,OAAS,8B,oBCAxED,EAAOC,QAAU,CAAC,UAAY,8BAA8B,KAAO,yBAAyB,OAAS,6B,uHCqEtFC,EAhEM,SAACC,GAElB,IAAMC,EAAaC,IAAMC,YAgBlBC,EAAcJ,EAAMK,aAAaC,MAAMC,WAAW,GAEnDC,EAAWJ,EAAYI,SAASC,KAAI,SAACC,GAEvC,OAAGA,EAAEC,UAEK,qBAAKC,UAAaC,IAAEC,OAApB,SAAkD,4BAAG,+BAAOJ,EAAEK,UAA3BC,KAAKC,UAEvC,sBAAKL,UAAaC,IAAEK,QAApB,UACH,qBAAKC,IAAMf,EAAYgB,MAAQC,IAAI,MACnC,4BAAG,+BAAOX,EAAEK,WAF2BC,KAAKC,aAKrDK,UAOH,OAEQ,sBAAKV,UAAaC,IAAEU,cAApB,UACK,+BAAKnB,EAAYoB,KAAjB,aACH,qBAAKZ,UAAaC,IAAEL,SAApB,SACEA,IAEF,uBAAMI,UAAaC,IAAEZ,WAArB,UACE,0BAAUwB,IAAOxB,EACjByB,YAAY,kBACZC,SAvCY,WACpB,IAAIZ,EAAKd,EAAW2B,QAAQC,MAC5B7B,EAAMK,aAAayB,gBAAgBf,IAsC3Bc,MAAS7B,EAAMK,aAAaC,MAAMyB,iBAElC,wBAAQC,QA/CG,SAACC,GACpBA,EAAMC,iBACNlC,EAAMK,aAAa8B,kBA6CX,kBACA,qBAAKvB,UAAaC,IAAEuB,eCWrBC,EA/DM,SAACrC,GAElB,IAAMC,EAAaC,IAAMC,YAgBlBC,EAAcJ,EAAMK,aAAaC,MAAMC,WAAW,GAEnDC,EAAWJ,EAAYI,SAASC,KAAI,SAACC,GAEvC,OAAGA,EAAEC,UAEK,qBAAKC,UAAaC,IAAEC,OAApB,SAA4B,4BAAG,+BAAOJ,EAAEK,WAEvC,sBAAKH,UAAaC,IAAEK,QAApB,UACH,qBAAKC,IAAMf,EAAYgB,MAAQC,IAAI,MACnC,4BAAG,+BAAOX,EAAEK,eAGrBO,UAMH,OAEQ,sBAAKV,UAAaC,IAAEU,cAApB,UACK,+BAAKnB,EAAYoB,KAAjB,aACH,qBAAKZ,UAAaC,IAAEL,SAApB,SACEA,IAEF,uBAAMI,UAAaC,IAAEZ,WAArB,UACE,0BAAUwB,IAAOxB,EACjByB,YAAY,kBACZC,SAtCY,WACpB,IAAIZ,EAAKd,EAAW2B,QAAQC,MAC5B7B,EAAMK,aAAayB,gBAAgBf,IAqC3Bc,MAAS7B,EAAMK,aAAaC,MAAMyB,iBAElC,wBAAQC,QA9CG,SAACC,GACpBA,EAAMC,iBACNlC,EAAMK,aAAa8B,kBA4CX,kBACA,qBAAKvB,UAAaC,IAAEuB,eCarBE,EAhEM,SAACtC,GAElB,IAAMC,EAAaC,IAAMC,YAgBlBC,EAAcJ,EAAMK,aAAaC,MAAMC,WAAW,GAEnDC,EAAWJ,EAAYI,SAASC,KAAI,SAACC,GAEvC,OAAGA,EAAEC,UAEK,qBAAKC,UAAaC,IAAEC,OAApB,SAA4B,4BAAG,+BAAOJ,EAAEK,WAEvC,sBAAKH,UAAaC,IAAEK,QAApB,UACH,qBAAKC,IAAMf,EAAYgB,MAAQC,IAAI,MACnC,4BAAG,+BAAOX,EAAEK,eAGrBO,UAOH,OAEQ,sBAAKV,UAAaC,IAAEU,cAApB,UACK,+BAAKnB,EAAYoB,KAAjB,aACH,qBAAKZ,UAAaC,IAAEL,SAApB,SACEA,IAEF,uBAAMI,UAAaC,IAAEZ,WAArB,UACE,0BAAUwB,IAAOxB,EACjByB,YAAY,kBACZC,SAvCY,WACpB,IAAIZ,EAAKd,EAAW2B,QAAQC,MAC5B7B,EAAMK,aAAayB,gBAAgBf,IAsC3Bc,MAAS7B,EAAMK,aAAaC,MAAMyB,iBAElC,wBAAQC,QA/CG,SAACC,GACpBA,EAAMC,iBACNlC,EAAMK,aAAa8B,kBA6CX,kBACA,qBAAKvB,UAAaC,IAAEuB,eCYrBG,EAhEM,SAACvC,GAElB,IAAMC,EAAaC,IAAMC,YAgBlBC,EAAcJ,EAAMK,aAAaC,MAAMC,WAAW,GAEnDC,EAAWJ,EAAYI,SAASC,KAAI,SAACC,GAEvC,OAAGA,EAAEC,UAEK,qBAAKC,UAAaC,IAAEC,OAApB,SAA4B,4BAAG,+BAAOJ,EAAEK,WAEvC,sBAAKH,UAAaC,IAAEK,QAApB,UACH,qBAAKC,IAAMf,EAAYgB,MAAQC,IAAI,MACnC,4BAAG,+BAAOX,EAAEK,eAGrBO,UAOH,OAEQ,sBAAKV,UAAaC,IAAEU,cAApB,UACK,+BAAKnB,EAAYoB,KAAjB,aACH,qBAAKZ,UAAaC,IAAEL,SAApB,SACEA,IAEF,uBAAMI,UAAaC,IAAEZ,WAArB,UACE,0BAAUwB,IAAOxB,EACjByB,YAAY,kBACZC,SAvCY,WACpB,IAAIZ,EAAKd,EAAW2B,QAAQC,MAC5B7B,EAAMK,aAAayB,gBAAgBf,IAsC3Bc,MAAS7B,EAAMK,aAAaC,MAAMyB,iBAElC,wBAAQC,QA/CG,SAACC,GACpBA,EAAMC,iBACNlC,EAAMK,aAAa8B,kBA6CX,kBACA,qBAAKvB,UAAaC,IAAEuB,e,iCCpD9BI,EAAcC,YAAiB,IAiB/BC,EAAsBC,YAAW,CAACC,KAAM,wBAAlBD,EAfL,SAAC3C,GAExB,OACA,uBAAMY,UAAWC,IAAEZ,WAAY4C,SAAY7C,EAAM8C,aAAjD,UAEQ,cAACC,EAAA,EAAD,CAAOC,UAAYC,IACnBC,SAAY,CAACC,IAAUX,GACvBd,YAAY,SAASF,KAAO,mBAE5B,gDAmDO4B,EA1CM,SAACpD,GAEpB,IAIMI,EAAcJ,EAAMK,aAAaC,MAAMC,WAAW,GAElDC,EAAWJ,EAAYI,SAC1BC,KAAI,SAACC,GACJ,OAAIA,EAAEC,UAEF,qBAAKC,UAAWC,IAAEC,OAAlB,SACE,4BACE,+BAAOJ,EAAEK,UAFoBL,EAAE2C,IAQnC,sBAAKzC,UAAWC,IAAEK,QAAlB,UACE,qBAAKC,IAAKf,EAAYgB,MAAOC,IAAI,MACjC,4BACE,+BAAOX,EAAEK,WAHqBL,EAAE2C,OASzC/B,UAEH,OACE,sBAAKV,UAAWC,IAAEU,cAAlB,UACE,+BAAKnB,EAAYoB,KAAjB,aACA,qBAAKZ,UAAWC,IAAEL,SAAlB,SAA6BA,IAC7B,cAACkC,EAAD,CAAqBG,SAjCH,SAACS,GACrBtD,EAAMK,aAAa8B,eAAemB,EAAOC,uB,kBCR9BC,EAhBK,SAACxD,GAEjB,OACQ,sBAAKY,UAAaC,IAAE4C,WAApB,UACI,qBAAKtC,IAAMnB,EAAMoB,MAAOC,IAAI,MAE5B,cAAC,IAAD,CAASqC,GAAI1D,EAAM2D,KAAMC,gBAAmB/C,IAAEgD,OAA9C,SAAuD7D,EAAMwB,W,kBCe9DsC,EAjBI,SAAC9D,GAEhB,IAAM+D,EAAa/D,EAAMgE,KAAKvD,KAAI,SAACwD,GAAD,OAAK,cAAC,EAAD,CAAaN,KAAQM,EAAEN,KAAMnC,KAAQyC,EAAEzC,KAAMJ,MAAS6C,EAAE7C,OAAc6C,EAAEZ,OAG/G,OACQ,sBAAKzC,UAAaC,IAAEqD,UAApB,UACI,yCACCH,MCuBFI,EAzBC,SAACnE,GAGb,OACI,cAAC,IAAD,UACI,sBAAKY,UAAaC,IAAEuD,QAApB,UACK,cAAC,EAAD,CAAYJ,KAAQhE,EAAMM,MAAMC,aAEhC,sBAAKK,UAAaC,IAAEwD,YAApB,UACC,cAAC,IAAD,CAAOC,KAAO,SAASC,OAAU,kBAAI,cAAC,EAAD,CAAclE,aAAgBL,OACnE,cAAC,IAAD,CAAOsE,KAAO,SAASC,OAAU,kBAAI,cAAC,EAAD,CAAclE,aAAgBL,OACnE,cAAC,IAAD,CAAOsE,KAAO,SAASC,OAAU,kBAAI,cAAC,EAAD,CAAclE,aAAgBL,OACnE,cAAC,IAAD,CAAOsE,KAAO,SAASC,OAAU,kBAAI,cAAC,EAAD,CAAclE,aAAgBL,OACnE,cAAC,IAAD,CAAOsE,KAAO,SAASC,OAAU,kBAAI,cAAC,EAAD,CAAclE,aAAgBL,gB,gCCLtEwE,sBACbC,aAPoB,SAACnE,GACrB,MAAO,CACLA,MAAOA,EAAMoE,gBAXQ,SAACC,GACxB,MAAO,CACLxC,eAAgB,SAACoB,GACf,IAAIqB,EAASC,YAA4BtB,GACzCoB,EAASC,QAabE,IAFaN,CAGbL","file":"static/js/3.91605d51.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"currentDialog\":\"DialogsChat_currentDialog__2cXt3\",\"messages\":\"DialogsChat_messages__2cEw9\",\"sended\":\"DialogsChat_sended__WbE2E\",\"resived\":\"DialogsChat_resived__1_vXZ\",\"newMessage\":\"DialogsChat_newMessage__sHiE_\",\"clear\":\"DialogsChat_clear__1Uyp7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__ac7n_\",\"item\":\"Dialogs_item__3CCFm\",\"dialogsChat\":\"Dialogs_dialogsChat__2_NJa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogsItem_dialogItem__3QEuh\",\"active\":\"DialogsItem_active__2xUXH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogNav\":\"DialogsNav_dialogNav__3tHm0\",\"item\":\"DialogsNav_item__FhyL-\",\"active\":\"DialogsNav_active__3X0hb\"};","import React from 'react';\nimport s from './DialogsChat.module.css';\n\n\n\n\nconst DialogsChat1 = (props)=>{\n\n    const newMessage = React.createRef();\n\n    const sendNewMessage = (event)=>{\n        event.preventDefault();\n        props.currentState.sendNewMessage();\n    }\n\n    const onMessageChange = ()=>{\n        let text=newMessage.current.value;\n        props.currentState.onMessageChange(text);\n        \n    }\n\n\n  \n\n     const currentUser = props.currentState.state.chatsUsers[1];\n    \n    const messages = currentUser.messages.map((m) =>{\n\n        if(m.iAmSender){\n            \n           return <div className = {s.sended} key = {Math.random()}><p><span>{m.text}</span></p></div>\n        }else{\n            return <div className = {s.resived} key = {Math.random()}>\n                <img src= {currentUser.image } alt=\"a\"/>\n                <p><span>{m.text}</span></p>\n                </div>\n        }\n    }).reverse();\n\n\n\n\n   \n\n    return (\n\n            <div className = {s.currentDialog}>\n                 <h1>{currentUser.name}'s Chat</h1>\n              <div className = {s.messages}>   \n               {messages}\n              </div>\n              <form className = {s.newMessage}>\n                <textarea ref = {newMessage} \n                placeholder=\"Your message...\"\n                onChange = {onMessageChange}\n                value = {props.currentState.state.newMessageText}\n                ></textarea>\n                <button onClick = {sendNewMessage}>Send</button>\n                <div className = {s.clear}></div>\n              </form>\n            </div>\n        \n   \n    );\n\n}\n\n\n\n\nexport default DialogsChat1;","import React from 'react';\nimport s from './DialogsChat.module.css';\n\n\n\n\nconst DialogsChat2 = (props)=>{\n\n    const newMessage = React.createRef();\n\n    const sendNewMessage = (event)=>{\n        event.preventDefault();\n        props.currentState.sendNewMessage();\n    }\n\n    const onMessageChange = ()=>{\n        let text=newMessage.current.value;\n        props.currentState.onMessageChange(text);\n        \n    }\n\n\n  \n\n     const currentUser = props.currentState.state.chatsUsers[2];\n    \n    const messages = currentUser.messages.map((m) =>{\n\n        if(m.iAmSender){\n            \n           return <div className = {s.sended}><p><span>{m.text}</span></p></div>\n        }else{\n            return <div className = {s.resived}>\n                <img src= {currentUser.image } alt=\"a\"/>\n                <p><span>{m.text}</span></p>\n                </div>\n        }\n    }).reverse();\n\n\n\n\n\n    return (\n\n            <div className = {s.currentDialog}>\n                 <h1>{currentUser.name}'s Chat</h1>\n              <div className = {s.messages}>   \n               {messages}\n              </div>\n              <form className = {s.newMessage}>\n                <textarea ref = {newMessage} \n                placeholder=\"Your message...\"\n                onChange = {onMessageChange}\n                value = {props.currentState.state.newMessageText}\n                ></textarea>\n                <button onClick = {sendNewMessage}>Send</button>\n                <div className = {s.clear}></div>\n              </form>\n            </div>\n        \n   \n    );\n\n}\n\n\n\n\nexport default DialogsChat2;","import React from 'react';\nimport s from './DialogsChat.module.css';\n\n\n\n\nconst DialogsChat3 = (props)=>{\n\n    const newMessage = React.createRef();\n\n    const sendNewMessage = (event)=>{\n        event.preventDefault();\n        props.currentState.sendNewMessage();\n    }\n\n    const onMessageChange = ()=>{\n        let text=newMessage.current.value;\n        props.currentState.onMessageChange(text);\n        \n    }\n\n\n  \n\n     const currentUser = props.currentState.state.chatsUsers[3];\n    \n    const messages = currentUser.messages.map((m) =>{\n\n        if(m.iAmSender){\n            \n           return <div className = {s.sended}><p><span>{m.text}</span></p></div>\n        }else{\n            return <div className = {s.resived}>\n                <img src= {currentUser.image } alt=\"a\"/>\n                <p><span>{m.text}</span></p>\n                </div>\n        }\n    }).reverse();\n\n\n\n\n\n\n    return (\n\n            <div className = {s.currentDialog}>\n                 <h1>{currentUser.name}'s Chat</h1>\n              <div className = {s.messages}>   \n               {messages}\n              </div>\n              <form className = {s.newMessage}>\n                <textarea ref = {newMessage} \n                placeholder=\"Your message...\"\n                onChange = {onMessageChange}\n                value = {props.currentState.state.newMessageText}\n                ></textarea>\n                <button onClick = {sendNewMessage}>Send</button>\n                <div className = {s.clear}></div>\n              </form>\n            </div>\n        \n   \n    );\n\n}\n\n\n\n\nexport default DialogsChat3;","import React from 'react';\nimport s from './DialogsChat.module.css';\n\n\n\n\nconst DialogsChat4 = (props)=>{\n\n    const newMessage = React.createRef();\n\n    const sendNewMessage = (event)=>{\n        event.preventDefault();\n        props.currentState.sendNewMessage();\n    }\n\n    const onMessageChange = ()=>{\n        let text=newMessage.current.value;\n        props.currentState.onMessageChange(text);\n        \n    }\n\n\n  \n\n     const currentUser = props.currentState.state.chatsUsers[4];\n    \n    const messages = currentUser.messages.map((m) =>{\n\n        if(m.iAmSender){\n            \n           return <div className = {s.sended}><p><span>{m.text}</span></p></div>\n        }else{\n            return <div className = {s.resived}>\n                <img src= {currentUser.image } alt=\"a\"/>\n                <p><span>{m.text}</span></p>\n                </div>\n        }\n    }).reverse();\n\n\n\n\n  \n\n    return (\n\n            <div className = {s.currentDialog}>\n                 <h1>{currentUser.name}'s Chat</h1>\n              <div className = {s.messages}>   \n               {messages}\n              </div>\n              <form className = {s.newMessage}>\n                <textarea ref = {newMessage} \n                placeholder=\"Your message...\"\n                onChange = {onMessageChange}\n                value = {props.currentState.state.newMessageText}\n                ></textarea>\n                <button onClick = {sendNewMessage}>Send</button>\n                <div className = {s.clear}></div>\n              </form>\n            </div>\n        \n   \n    );\n\n}\n\n\n\n\nexport default DialogsChat4;","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { maxLengthCreator, required } from \"../../../../util/validators/validators\";\nimport { Textarea } from \"../../../common/FormsControls/FormsControls\";\nimport s from \"./DialogsChat.module.css\";\n\nconst maxLength50 = maxLengthCreator(50);\n\nconst NewMessageForm = (props) => {\n\nreturn (\n<form className={s.newMessage} onSubmit = {props.handleSubmit}>\n\n        <Field component= {Textarea}  \n        validate = {[required, maxLength50]}\n        placeholder=\"New...\" name = \"newMessageBody\"/>\n        \n        <button >Send</button>\n      </form>\n\n)\n}\n\nconst NewMessageFormRedux = reduxForm ({form: \"dialogNewMessageForm\"})(NewMessageForm);\n\n\nconst DialogsChat0 = (props) => {\n\n  const addNewMessage = (values) =>{\n    props.currentState.sendNewMessage(values.newMessageBody);\n  }\n\n  const currentUser = props.currentState.state.chatsUsers[0];\n\n  const messages = currentUser.messages\n    .map((m) => {\n      if (m.iAmSender) {\n        return (\n          <div className={s.sended} key = {m.id}>\n            <p>\n              <span>{m.text}</span>\n            </p>\n          </div>\n        );\n      } else {\n        return (\n          <div className={s.resived} key = {m.id}>\n            <img src={currentUser.image} alt=\"a\" />\n            <p>\n              <span>{m.text}</span>\n            </p>\n          </div>\n        );\n      }\n    })\n    .reverse();\n\n  return (\n    <div className={s.currentDialog}>\n      <h1>{currentUser.name}'s Chat</h1>\n      <div className={s.messages}>{messages}</div>\n      <NewMessageFormRedux onSubmit = {addNewMessage}/>\n    </div>\n  );\n};\n\n\n\nexport default DialogsChat0;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './DialogsItem.module.css';\n\n\nconst DialogsItem = (props)=>{\n\n    return (\n            <div className = {s.dialogItem}>\n                <img src= {props.image} alt=\"G\"/>\n                \n                <NavLink to={props.link} activeClassName = {s.active}>{props.name}</NavLink>\n                \n            </div>\n    );\n\n}\n\n\n\n\nexport default DialogsItem;","import React from 'react';\nimport DialogsItem from './dialogsItems/DialogsItem';\nimport s from './DialogsNav.module.css';\n\n\n\n\n                   \n\nconst DialogsNav = (props)=>{\n\n    const chatsLinks = props.data.map((l)=><DialogsItem link = {l.link} name = {l.name} image = {l.image} key = {l.id}/>);\n\n\n    return (\n            <div className = {s.dialogNav}>\n                <h1>Dialogs</h1>\n                {chatsLinks}\n            </div>\n    );\n\n}\n\n\n\n\nexport default DialogsNav;","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport s from './Dialogs.module.css';\nimport DialogsChat1 from './dialogsChat/DialogsChat1';\nimport DialogsChat2 from './dialogsChat/DialogsChat2';\nimport DialogsChat3 from './dialogsChat/DialogsChat3';\nimport DialogsChat4 from './dialogsChat/DialogsChat4';\nimport DialogsChat0 from './dialogsChat/DialogsChat0';\nimport DialogsNav from './dialogsNav/DialogsNav';\n\n\n\n\n\n\nconst Dialogs = (props)=>{\n\n\n    return (\n        <BrowserRouter>\n            <div className = {s.dialogs}>\n                 <DialogsNav data = {props.state.chatsUsers}/>\n\n                 <div className = {s.dialogsChat}>\n                  <Route path = \"/chat0\" render = {()=><DialogsChat0 currentState = {props}/>}/>\n                  <Route path = \"/chat1\" render = {()=><DialogsChat1 currentState = {props}/>}/>\n                  <Route path = \"/chat2\" render = {()=><DialogsChat2 currentState = {props}/>}/>\n                  <Route path = \"/chat3\" render = {()=><DialogsChat3 currentState = {props}/>}/>\n                  <Route path = \"/chat4\" render = {()=><DialogsChat4 currentState = {props}/>}/>\n                </div>\n            </div>\n        </BrowserRouter>\n      \n    );\n\n}\n\n\n\n\nexport default Dialogs;","import Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\";\nimport {\n  sendNewMessageActionCreator,\n} from \"../../data/reducerMessages\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    sendNewMessage: (newMessageBody) => {\n      let action = sendNewMessageActionCreator(newMessageBody);\n      dispatch(action);\n    },\n  };\n};\n\nlet mapStateToProps = (state) => {\n  return {\n    state: state.dialogsPage,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);\n"],"sourceRoot":""}